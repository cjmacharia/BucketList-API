version: 2
jobs:
  build:
    docker:
      - image:  circleci/python:3.6.1
    steps:
      - checkout
      - run:
          name: view my content
          command: |
            ls
            which python
      - run:
          name: install python requirements
          command: |
            python3 -m venv venv
            . venv/bin/activate
            pip install -r requirements.txt
  test:
    docker:
      - image: circleci/python:3.6.1
        environment:
          PG_HOST: 'localhost'
          PG_USER: 'circleci'
      - image: postgres:9.6.2-alpine
        environment:
          POSTGRES_USER: 'circleci'
          POSTGRES_DB: 'test_db'
    steps:
      - checkout
      - run:
          name: run tests
          command: |
            python3 -m venv venv
            . venv/bin/activate
            pip install -r requirements.txt
            python3 manage.py db init
            python3 manage.py db migrate
            python3 manage.py db upgrade
            pytest

          environment:
            FLASK_APP: "run.py"
            SECRET: $SECRET
            APP_SETTINGS: "development"
            DATABASE_URL: "postgres://circleci@localhost:5432/test_db"
  deploy_production:
    docker:
      - image: google/cloud-sdk
    steps:
      - checkout
      - setup_remote_docker:
          docker_layer_caching: true
      - run:
          name: Install Docker client
          command: |
            set -x
            VER="17.03.0-ce"
            curl -L -o /tmp/docker-$VER.tgz https://download.docker.com/linux/static/stable/x86_64/docker-$VER.tgz
            tar -xz -C /tmp -f /tmp/docker-$VER.tgz
            mv /tmp/docker/* /usr/bin
      - run:
          name: bake a docker image
          command: |
            echo "create a docker image for cloud"
            docker build --no-cache -t gcr.io/packer-192412/python-api:$CIRCLE_SHA1 .


workflows:
  version: 2
  build_test:
    jobs:
      - build
      - test
      - deploy_production
